{"version":3,"sources":["webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VBtn/index.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VDivider/VDivider.ts","webpack:///../../../src/mixins/menuable/index.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/returnable/index.ts"],"names":["name","props","openDelay","type","Number","default","closeDelay","data","openTimeout","closeTimeout","undefined","methods","clearDelay","clearTimeout","this","runDelay","delay","parseInt","setTimeout","cb","open","close","stackElement","stackExclude","stackMinZIndex","isActive","computed","activeZIndex","window","content","$refs","index","getMaxZIndex","exclude","base","zis","activeElements","document","Math","root","Boolean","isDark","render","$slots","node","baseMixins","activator","validator","val","includes","disabled","internalActivator","openOnHover","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","beforeDestroy","addActivatorEvents","keys","Object","key","genActivator","on","attrs","genActivatorAttributes","role","String","genActivatorListeners","e","getActivator","target","length","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","validateAttachTarget","Node","attach","contentClass","hasDetached","hasContent","beforeMount","Array","deactivated","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","functional","directives","ripple","value","indeterminate","indeterminateIcon","onIcon","offIcon","children","h","staticClass","center","icon","dark","light","classes","class","click","f","mixins","inset","themeClasses","$listeners","action","dense","hideSelected","items","itemDisabled","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","parsedItems","map","item","tileActiveClass","setTextColor","staticNoDataTile","tile","mousedown","$createElement","VListItem","genTileContent","genAction","VListItemAction","VSimpleCheckbox","color","inputValue","input","genDivider","VDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","genTile","hasItem","getDisabled","id","_uid","activeClass","$scopedSlots","parent","scopedSlot","needsTile","innerHTML","getText","VList","domProps","indexOf","getValue","slot","itemsLength","tabindex","valueComparator","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","ClickOutside","appendIcon","cacheItems","chips","clearable","deletableChips","disableLookup","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","menuIsBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","computedCounterValue","isFocused","args","closeConditional","dynamicHeight","hasChips","hasSlot","isDirty","listData","$vnode","context","$vuetify","lang","t","select","selectItem","scopedSlots","staticList","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","split","acc","p","nudgeBottom","internalValue","immediate","handler","blur","activateMenu","clearableCallback","getContent","contains","$el","uniqueValues","arr","findExistingIndex","i","menu","genChipSelection","isDisabled","VChip","small","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genIcon","VInput","mergeData","genInput","readonly","autocomplete","keypress","onKeyPress","genHiddenInput","attrs$","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","ref","genSelections","genSelection","genSlotSelection","selection","selected","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","isAppendInner","onEscDown","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","onKeyDown","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","onScroll","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","setMenuIndex","setSelectedItems","values","v","oldValue","appendInner","active","chipGroup","closeIcon","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","proxyClass","groupClasses","hasClose","isClickable","created","breakingProps","original","replacement","genFilter","left","genClose","right","size","genContent","setBackgroundColor","vertical","$attrs","orientation","allowOverflow","maxWidth","minWidth","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","positionX","positionY","zIndex","absoluteX","absoluteY","activatedBy","activatorFixed","dimensions","top","bottom","width","height","offsetTop","offsetLeft","hasJustFocused","hasWindow","inputActivator","isContentActive","pageWidth","pageYOffset","stackClass","computedLeft","a","c","activatorLeft","isNaN","computedTop","hasActivator","absolutePosition","activate","calcLeft","calcXOverflow","calcTop","calcYOverflow","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","getInnerHeight","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","style","sneakPeek","startTransition","Promise","resolve","updateDimensions","provide","isInMenu","theme","Resize","auto","offsetX","offsetY","origin","transition","calculatedTopAuto","defaultOffset","resizeTimeout","tiles","calculatedLeft","menuWidth","parseFloat","calculatedMaxHeight","calculatedMaxWidth","calculatedMinWidth","calculatedTop","hasClickableTiles","find","styles","transformOrigin","next","prev","classList","remove","hasOwnProperty","calcScrollPosition","maxScrollTop","calcLeftAuto","calcTopAuto","tileDistanceFromMenuTop","firstTileOffsetTop","changeListIndex","attributes","genTransition","genDirectives","include","options","menuable__content__active","keydown","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","onResize","arg","showLazyContent","returnValue","originalValue","save"],"mappings":"qKASe,oCAAkD,CAC/DA,KAD+D,YAG/DC,MAAO,CACLC,UAAW,CACTC,KAAM,CAACC,OADE,QAETC,QAAS,GAEXC,WAAY,CACVH,KAAM,CAACC,OADG,QAEVC,QAAS,IAIbE,KAAM,iBAAO,CACXC,iBADW,EAEXC,kBAAcC,IAGhBC,QAAS,CAIPC,WAJO,WAKLC,aAAaC,KAAb,aACAD,aAAaC,KAAb,eAKFC,SAXO,SAWC,KAAyC,WAC/CD,KAAA,aAEA,IAAME,EAAQC,SAAUH,KAAA,UAAF,EAAE,UAAxB,IAEEA,KAAA,wBAAiCI,WAAWC,GAAO,WACnD,WAAgB,CAAEC,MAAF,EAAcC,OAAO,GAArC,IADA,Q,0GCjCO,oCAA6B,CAC1CrB,KAD0C,YAG1CO,KAH0C,WAIxC,MAAO,CACLe,aADK,KAELC,aAFK,KAGLC,eAHK,EAILC,UAAU,IAGdC,SAAU,CACRC,aADQ,WAEN,wBAAWC,OAAwB,OAAO,EAE1C,IAAMC,EAAUf,KAAKQ,cAAgBR,KAAKgB,MAHhC,QAMJC,EAASjB,KAAD,SAEVA,KAAKkB,aAAalB,KAAKS,cAAgB,CAAvC,IAFJ,EACI,eADU,GAId,aAAIQ,EAVM,EAcHd,SAAP,KAGJN,QAAS,CACPqB,aADO,WAeL,IAdmC,IAAvBC,EAAuB,uDAAzB,GACJC,EAAOpB,KADsB,IAI7BqB,EAAM,CAACrB,KAAD,eAAsB,eAJC,IAQ7BsB,EAAiB,GAAH,sBACfC,SAAA,uBADkB,4BAAH,eAEfA,SAAA,uBAV8B,+BAc1BN,EAAT,EAAoBA,EAAQK,EAA5B,OAAmDL,IAC5CE,EAAA,SAAiBG,EAAtB,KACED,EAAA,KAAS,eAAUC,EAAnB,KAIJ,OAAOE,KAAA,UAAAA,KAAP,Q,oCC7DN,gBAGA,e,oCCHA,gBAGA,e,8DCIe,qBAAiB,CAC9BtC,KAD8B,mBAG9BC,MAAO,CAAEsC,KAAMC,SAEfd,SAAU,CACRe,OADQ,WAEN,OAAO3B,KAAKyB,KACRzB,KADG,WAEH,oCAFJ,QAMJ4B,OAb8B,WAe5B,OACE5B,KAAK6B,OAAOtC,SACZS,KAAK6B,OAAOtC,QAAZ,MAA0B,SAAAuC,GAAI,OAAKA,EAAD,WAFpC,MAEuDA,EAAA,Y,wJCZrDC,EAAa,eAAO,EAAD,KAAzB,QAMe,OAAAA,EAAA,OAAkB,CAC/B7C,KAD+B,cAG/BC,MAAO,CACL6C,UAAW,CACTzC,QADS,KAET0C,UAAY,SAAAC,GACV,MAAO,CAAC,SAAU,UAAUC,SAAS,OAA9B,OAA8B,CAArC,MAGJC,SAPK,QAQLC,kBARK,QASLC,YAAaZ,SAGfjC,KAAM,iBAAO,CAEX8C,iBAFW,KAGXC,cAHW,GAIXC,OAAQ,CAAC,QAAS,aAJP,cAKXC,UAAW,KAGbC,MAAO,CACLX,UADK,iBAELM,YAAa,kBAGfM,QA5B+B,WA6B7B,IAAMC,EAAW,eAAY7C,KAAM,aAAnC,GAEI6C,GAAY,CAAC,SAAU,UAAUV,SAArC,IACE,eAAa,kGAAb,MAGFnC,KAAA,sBAGF8C,cAtC+B,WAuC7B9C,KAAA,yBAGFH,QAAS,CACPkD,mBADO,WAEL,GACG/C,KAAD,YACAA,KADA,UAECA,KAHH,gBAMAA,KAAA,UAAiBA,KAAjB,wBAGA,IAFA,IAAMgD,EAAOC,OAAA,KAAYjD,KAAzB,WAEA,uBAAwB,CAAnB,IAAMkD,EAAX,KACElD,KAAA,kCAA2CA,KAAK0C,UAAhD,OAGJS,aAfO,WAgBL,IAAMrB,EAAO,eAAQ9B,KAAM,YAAaiD,OAAA,OAAcjD,KAAd,gBAAoC,CAC1EoD,GAAIpD,KADsE,wBAE1EqD,MAAOrD,KAAKsD,6BAFd,GAOA,OAFAtD,KAAA,gBAEA,GAEFsD,uBAzBO,WA0BL,MAAO,CACLC,KADK,SAEL,iBAFK,EAGL,gBAAiBC,OAAOxD,KAAD,YAG3ByD,sBAhCO,WAgCc,WACnB,GAAIzD,KAAJ,SAAmB,MAAO,GAE1B,IAAM0C,EAAN,GAsBA,OApBI1C,KAAJ,aACE0C,EAAA,WAAwB,SAAAgB,GACtB,kBACA,oBAEFhB,EAAA,WAAwB,SAAAgB,GACtB,kBACA,sBAGFhB,EAAA,MAAmB,SAAAgB,GACjB,IAAM1B,EAAY,eAAlB,GACA,GAAeA,EAAA,QAEf0B,EAAA,kBAEA,YAAiB,EAAjB,UAIJ,GAEFC,aA3DO,SA2DK,GAEV,GAAI3D,KAAJ,iBAA2B,OAAOA,KAAP,iBAE3B,IAAIgC,EAAJ,KAEA,GAAIhC,KAAJ,UAAoB,CAClB,IAAM4D,EAAS5D,KAAKqC,kBAAoBrC,KAAzB,IAAf,SAIEgC,EAFF,kBAAWhC,KAAP,UAEU4D,EAAA,cAAqB5D,KAAjCgC,WACUhC,KAAKgC,UAAV,IAEQhC,KAAKgC,UAAlB,IAGYhC,KAAZgC,eAEG,GAAkC,IAA9BhC,KAAKwC,cAAcqB,QAAiB7D,KAAKwC,cAAcqB,SAA3D,EAA0E,CAI/E,IAAMC,EAAK9D,KAAKwC,cAAc,GAA9B,kBAOER,EALA8B,GACAA,EAAA,SADA,QAEAA,EAAA,sBAAyB,SAAAC,GAAD,OAAYA,EAAA,SAAa,CAAC,cAAe,YAAY5B,SAAS4B,EAAA,QAHxF,SAMeD,EAAb,eAEY9D,KAAKwC,cAAc,GAA/B,SAEOkB,IAET1B,EAAa0B,EAAA,eAAmBA,EAAhC,QAKF,OAFA1D,KAAA,mBAEOA,KAAP,kBAEFgE,eAtGO,WAuGL,OAAO,eAAQhE,KAAM,UAAWA,KAAlB,iBAAd,IAEFiE,cAzGO,WA0GL,IAAMC,EAAN,KACA,MAAO,CACL,YACE,OAAOA,EAAP,UAEF,aACEA,EAAA,cAINC,sBApHO,WAqHL,GACGnE,KAAD,WACCA,KAFH,kBAOA,IAFA,IAAMgD,EAAOC,OAAA,KAAYjD,KAAzB,WAEA,uBAAwB,CAAnB,IAAMkD,EAAX,KACGlD,KAAA,uCAAuDA,KAAK0C,UAA5D,IAGH1C,KAAA,eAEFoE,eAlIO,WAmILpE,KAAA,wBACAA,KAAA,sBACAA,KAAA,eACAA,KAAA,0B,6JC/KN,SAASqE,EAAT,GACE,IAAMhF,EAAO,eAAb,GAEA,MAAI,YAAAA,GAAJ,WAA0BA,GAEnB6C,EAAA,WAAiBoC,KAAxB,aAIa,qCAII,CACjBpF,KADiB,aAGjBC,MAAO,CACLoF,OAAQ,CACNhF,SADM,EAEN0C,UAAWoC,GAEbG,aAAc,CACZnF,KADY,OAEZE,QAAS,KAIbE,KAAM,iBAAO,CACX+C,cADW,KAEXiC,aAAa,IAGf9B,MAAO,CACL4B,OADK,WAEHvE,KAAA,eACAA,KAAA,cAEF0E,WALK,WAMH1E,KAAA,UAAeA,KAAf,cAIJ2E,YA7BiB,WA6BN,WACT3E,KAAA,WAAe,WACb,GAAI,EAAJ,cAAwB,CACtB,IAAMgC,EAAY4C,MAAA,QAAc,EAAd,eAAoC,EAApC,cAAyD,CAAC,EAA5E,eAEA5C,EAAA,SAAkB,SAAAF,GAChB,GAAKA,EAAL,KACK,MAAL,YAEA,IAAM8B,EAAS,QAAa,iBAAb,WACX,EADW,IAEX,MAFJ,YAIA,8BAAiC9B,EAAjC,gBAMRc,QAhDiB,WAiDf5C,KAAA,YAAmBA,KAAnB,cAGF6E,YApDiB,WAqDf7E,KAAA,aAGF8C,cAxDiB,WA0Df,IAQE,GANE9C,KAAKgB,MAAMD,SACXf,KAAKgB,MAAMD,QAFb,YAIEf,KAAA,qCAA0CA,KAAKgB,MAA/C,SAGEhB,KAAJ,cAAwB,CACtB,IAAMgC,EAAY4C,MAAA,QAAc5E,KAAd,eAAoCA,KAApC,cAAyD,CAACA,KAA5E,eACAgC,EAAA,SAAkB,SAAAF,GAChBA,EAAA,KACEA,EAAA,IADF,YAEEA,EAAA,2BAAgCA,EAFlC,SAKJ,MAAO4B,GAAKoB,QAAA,SAGhBjF,QAAS,CACPkF,gBADO,WAEL,IAAMC,EAAU,eAAqBhF,KAAD,OAApC,6BAEA,OAAOgF,GAAW,kBAChB,EAAW,KAGfC,WARO,WAmBL,MAVIjF,KAAKkF,eACNlF,KAAKgB,MADJ,SAEFhB,KAFE,kBAKFA,KAAA,SALE,IAMFA,KAAA,QANF,WAOEA,KAAA,SAMA4D,GAFF,IAAI5D,KAAKuE,OAEEhD,SAAA,cAAT,cACK,kBAAWvB,KAAP,OAEAuB,SAAA,cAAuBvB,KAAhC,QAGSA,KAAT,OAGF,GAKA4D,EAAA,YAAmB5D,KAAKgB,MAAxB,SAEAhB,KAAA,gBANE,eAAY,2BAAD,OAA4BA,KAAKuE,QAAjC,cAAX,Y,8MClIO,2BAAW,CACxBrF,KADwB,oBAGxBiG,YAHwB,EAKxBC,WAAY,CACVC,OAAA,QAGFlG,MAAO,gDACF,eADE,OAEF,eAFE,OAAF,IAGHiD,SAHK,QAILiD,OAAQ,CACNhG,KADM,QAENE,SAAS,GAEX+F,MARK,QASLC,cATK,QAULC,kBAAmB,CACjBnG,KADiB,OAEjBE,QAAS,0BAEXkG,OAAQ,CACNpG,KADM,OAENE,QAAS,eAEXmG,QAAS,CACPrG,KADO,OAEPE,QAAS,kBAIbqC,OAjCwB,SAiClB,EAjCkB,GAiCE,IAAf,EAAe,EAAf,MAASnC,EAAM,EAANA,KACZkG,EAAN,GAEA,GAAIxG,EAAA,SAAiBA,EAArB,SAAqC,CACnC,IAAM,EAASyG,EAAE,MAAO,oCAAuCzG,EAAvC,MAAoD,CAC1E0G,YAD0E,sCAE1ET,WAAY,CAAC,CACXlG,KADW,SAEXoG,MAAO,CAAEQ,QAAQ,QAIrBH,EAAA,QAGF,IAAII,EAAO5G,EAAX,QACIA,EAAJ,cAAyB4G,EAAO5G,EAAhC,kBACSA,EAAJ,QAAiB4G,EAAO5G,EAAP,QAEtBwG,EAAA,KAAcC,EAAE,EAAD,KAAQ,oCAAuCzG,EAAA,OAAeA,EAAtD,MAAmE,CACxFA,MAAO,CACLiD,SAAUjD,EADL,SAEL6G,KAAM7G,EAFD,KAGL8G,MAAO9G,EAAM8G,SAJjB,IAQA,IAAMC,EAAU,CACd,qBADc,EAEd,8BAA+B/G,EAAMiD,UAGvC,OAAOwD,EAAE,MAAO,OAAR,OAAQ,CAAP,kBAAO,GAAR,IAENO,MAFc,EAGd/C,GAAI,CACFgD,MAAQ,SAAA1C,GACNA,EAAA,kBAEIjE,EAAA,IAAWA,EAAA,GAAX,QAA6BN,EAAjC,UACE,eAAYM,EAAA,GAAZ,gBAAmC,SAAA4G,GAAC,OAAIA,GAAGlH,EAA3C,cARR,O,kCC5EJ,gBAGA,e,kCCHA,gBAGA,e,8bCOe,SAAAmH,EAAA,MACb,QADa,OAGN,CACPpH,KADO,cAGPC,MAAO,CACLoH,MAAO7E,SAGTE,OAPO,SAOD,GACJ,OAAOgE,EAAE,MAAO,CACdC,YADc,cAEdM,MAAO,gBACL,qBAAsBnG,KADjB,OAEFA,KAAKwG,cAEVnD,MAAOrD,KANO,OAOdoD,GAAIpD,KAAKyG,YACRzG,KAAK6B,OARR,YClBJ,I,oFC8Be,SAAAyE,EAAA,MAAO,EAAD,KAAN,eAAoC,CACjDpH,KADiD,gBAIjDkG,WAAY,CACVC,SAAA,MAGFlG,MAAO,CACLuH,OADK,QAELC,MAFK,QAGLC,aAHK,QAILC,MAAO,CACLxH,KADK,MAELE,QAAS,iBAAM,KAEjBuH,aAAc,CACZzH,KAAM,CAACmE,OAAQoB,MADH,UAEZrF,QAAS,YAEXwH,SAAU,CACR1H,KAAM,CAACmE,OAAQoB,MADP,UAERrF,QAAS,QAEXyH,UAAW,CACT3H,KAAM,CAACmE,OAAQoB,MADN,UAETrF,QAAS,SAEX0H,WApBK,OAqBLC,SArBK,QAsBLC,YAtBK,KAuBLC,cAAe,CACb/H,KADa,MAEbE,QAAS,iBAAM,MAInBqB,SAAU,CACRyG,YADQ,WACG,WACT,OAAOrH,KAAKoH,cAAcE,KAAI,SAAAC,GAAI,OAAI,WAAtC,OAEFC,gBAJQ,WAKN,OAAOvE,OAAA,KAAYjD,KAAKyH,aAAazH,KAAlB,cAAZ,SAAP,MAEF0H,iBAPQ,WAQN,IAAMC,EAAO,CACXtE,MAAO,CACLE,UAAM3D,GAERwD,GAAI,CACFwE,UAAY,SAAAlE,GAAD,OAAcA,EAAA,oBAI7B,OAAO1D,KAAK6H,eAAeC,EAApB,OAAqC,CAC1C9H,KAAK+H,eAAe/H,KADtB,gBAMJH,QAAS,CACPmI,UADO,SACE,KAA+B,WACtC,OAAOhI,KAAK6H,eAAeI,EAApB,KAAqC,CAC1CjI,KAAK6H,eAAeK,EAApB,KAAqC,CACnC/I,MAAO,CACLgJ,MAAOnI,KADF,MAELsF,MAAO8C,GAEThF,GAAI,CACFiF,MAAO,kBAAM,2BAKrBC,WAdO,SAcG,GACR,OAAOtI,KAAK6H,eAAeU,EAApB,KAA8B,CAAEpJ,WAEzCqJ,gBAjBO,SAiBQ,GAGb,GAFAC,EAAOA,GAAP,IAEKzI,KAAD,aAAqBA,KAAzB,SAAwC,OAAO,eAAP,GAHb,MAKIA,KAAK0I,oBAApC,GAAM,EALqB,EAKrB,QALqB,EAKrB,OAAiBC,EALI,EAKJA,IAEvB,gBAAU,eAAWC,IAArB,OAA8B5I,KAAK6I,aAAaC,IAAhD,OAA0D,eAA1D,KAEFC,UA1BO,SA0BE,GACP,OAAO/I,KAAK6H,eAAe,EAAY,CAAE1I,SAASA,EAAlD,SAEF0J,aA7BO,SA6BK,GACV,gDAA0C,eAA1C,eAEFH,oBAhCO,SAgCY,GAKjB,IAAMvB,GAAenH,KAAKmH,aAAN,eAApB,oBACMlG,EAAQwH,EAAA,4BAAd,GAEA,GAAIxH,EAAJ,EAAe,MAAO,CAAE2H,MAAF,GAAaE,OAAb,EAA2BH,IAAK,IAEtD,IAAMC,EAAQH,EAAA,QAAd,GACMK,EAASL,EAAA,QAAkBxH,EAAQkG,EAAzC,QACMwB,EAAMF,EAAA,MAAWxH,EAAQkG,EAA/B,QACA,MAAO,CAAEyB,QAAOE,SAAQH,QAE1BK,QA/CO,YAoDI,WALF,EAKE,EALF,OAKE,EALF,MAKE,IAFT5G,gBAES,MALF,KAKE,MADTkD,aACS,SACT,IAAYA,EAAQtF,KAAKiJ,QAAb,IAER1B,IAAStE,OAAb,KACEb,EAAW,OAAAA,IAEPpC,KAAKkJ,YAFT,IAKF,IAAMvB,EAAO,CACXtE,MAAO,CAGL,gBAAiBG,OAHZ,GAIL2F,GAAI,aAAF,OAAenJ,KAAKoJ,KAApB,YAJG,GAKL7F,KAAM,UAERH,GAAI,CACFwE,UAAY,SAAAlE,GAEVA,EAAA,kBAEF0C,MAAO,kBAAMhE,GAAY,sBAE3BjD,MAAO,CACLkK,YAAarJ,KADR,gBAELoC,WACAiD,QAHK,EAIL+C,WAAY9C,IAIhB,IAAKtF,KAAKsJ,aAAV,KACE,OAAOtJ,KAAK6H,eAAeC,EAApB,OAAqC,CAC1C9H,KAAK0G,SAAW1G,KAAhB,cAAqCA,KAAK6G,MAAMhD,OAAhD,EACI7D,KAAKgI,UAAUT,EADnB,GAD0C,KAI1CvH,KAAK+H,eAAeR,EAJtB,KAQF,IAAMgC,EAAN,KACMC,EAAaxJ,KAAKsJ,aAAa/B,KAAK,CACxCgC,SACAhC,OACAlE,MAAO,iCACFsE,EADE,OAEFA,EAAKxI,OAEViE,GAAIuE,EAAKvE,KAGX,OAAOpD,KAAKyJ,UAAUD,GAClBxJ,KAAK6H,eAAeC,EAApB,OADG,GAAP,GAIFC,eA5GO,SA4GO,GAAsB,IAC5B2B,EAAY1J,KAAKwI,gBAAgBxI,KAAK2J,QAA5C,IAEA,OAAO3J,KAAK6H,eAAe+B,EAApB,KACL,CAAC5J,KAAK6H,eAAe+B,EAApB,KAAoC,CACnCC,SAAU,CAAEH,kBAIlBT,QArHO,SAqHA,GACL,OAAOjJ,KAAKqH,YAAYyC,QAAQ9J,KAAK+J,SAA9B,KAAP,GAEFN,UAxHO,SAwHE,GACP,OAAO,IAAAO,EAAA,cACLA,EAAA,qBADF,gBAEEA,EAAA,uCAEJd,YA7HO,SA6HI,GACT,OAAOxH,QAAQ,eAAoB6F,EAAMvH,KAAP,cAAlC,KAEF2J,QAhIO,SAgIA,GACL,OAAOnG,OAAO,eAAoB+D,EAAMvH,KAAP,SAAjC,KAEF+J,SAnIO,SAmIC,GACN,OAAO,eAAoBxC,EAAMvH,KAAP,UAAuBA,KAAK2J,QAAtD,MAIJ/H,OApMiD,WAuM/C,IAFA,IAAM+D,EAAN,GACMsE,EAAcjK,KAAK6G,MAAzB,OACS5F,EAAT,EAAoBA,EAApB,EAAyCA,IAAS,CAChD,IAAMsG,EAAOvH,KAAK6G,MAAlB,GAEI7G,KAAK4G,cACP5G,KAAKiJ,QADP,KAIA,MAAI1B,EAAc5B,EAAA,KAAc3F,KAAKgJ,QAAQ,CAAEzB,OAAMtG,WAC5CsG,EAAJ,OAAiB5B,EAAA,KAAc3F,KAAK+I,UAApC,IACIxB,EAAJ,QAAkB5B,EAAA,KAAc3F,KAAKsI,WAArC,IACA3C,EAAA,KAAc3F,KAAKgJ,QAAQ,CAAEzB,OAAMtG,YAS1C,OANA0E,EAAA,QAAmBA,EAAA,KAAc3F,KAAK6B,OAAO,YAAc7B,KAA3D,kBAEAA,KAAA,wBAA+B2F,EAAA,QAAiB3F,KAAK6B,OAArD,iBAEA7B,KAAA,uBAA8B2F,EAAA,KAAc3F,KAAK6B,OAAjD,gBAEO7B,KAAK6H,eAAe,EAApB,KAA2B,CAChChC,YADgC,gBAEhCM,MAAOnG,KAFyB,aAGhCqD,MAAO,CACLE,KADK,UAEL2G,UAAW,GAEb/K,MAAO,CAAEwH,MAAO3G,KAAK2G,QAPvB,M,oCCxPW,sBAAW,CACxBzH,KADwB,aAExBC,MAAO,CACLgL,gBAAiB,CACf9K,KADe,SAEfE,QAAS,WCLA,sBAAW,CACxBL,KADwB,aAGxBC,MAAO,CACL8H,WAAY,CACV5H,KADU,OAEVE,QAAS,0B,oCCqBF6K,EAAmB,CAC9BC,cAD8B,EAE9BC,qBAF8B,EAG9BC,aAH8B,EAI9BC,aAJ8B,EAK9BC,UAAW,KAIP1I,EAAa,OAAAuE,EAAA,MAAO,EAAD,OAAzB,GAmBe,OAAAvE,EAAA,gBAAoC,CACjD7C,KADiD,WAGjDkG,WAAY,CACVsF,aAAA,QAGFvL,MAAO,CACLwL,WAAY,CACVtL,KADU,OAEVE,QAAS,aAEXgF,OAAQ,CACNlF,KADM,KAENE,SAAS,GAEXqL,WATK,QAULC,MAVK,QAWLC,UAXK,QAYLC,eAZK,QAaLC,cAbK,QAcLC,MAdK,QAeLrE,aAfK,QAgBLC,MAAO,CACLxH,KADK,MAELE,QAAS,iBAAM,KAEjB2L,UAAW,CACT7L,KADS,OAETE,QAAS,WAEXuH,aAAc,CACZzH,KAAM,CAACmE,OAAQoB,MADH,UAEZrF,QAAS,YAEXwH,SAAU,CACR1H,KAAM,CAACmE,OAAQoB,MADP,UAERrF,QAAS,QAEXyH,UAAW,CACT3H,KAAM,CAACmE,OAAQoB,MADN,UAETrF,QAAS,SAEX4L,UAAW,CACT9L,KAAM,CAACmE,OAAQoB,MADN,QAETrF,QAAS,kBAAM6K,IAEjBgB,SAxCK,QAyCLC,YAzCK,QA0CLC,aA1CK,QA2CLC,WAAY7J,SAGdjC,KArDiD,WAsD/C,MAAO,CACL+L,YAAaxL,KAAK4K,WAAa5K,KAAlB,MADR,GAELyL,cAFK,EAGLC,cAHK,EAILC,SAJK,GAQLC,eAA0BhM,IAAfI,KAAKsF,MACZtF,KADO,MAEPA,KAAKoL,SAAW,QAVf,EAWLS,eAXK,EAYLzE,cAZK,GAaL0E,qBAbK,GAcLC,uBAAwB,IAI5BnL,SAAU,CAERoL,SAFQ,WAGN,OAAOhM,KAAKiM,iBAAiBjM,KAAKwL,YAAYU,OAAOlM,KAArD,SAEFkG,QALQ,WAMN,wCACK,qCADE,OAAP,IAEE,YAFK,EAGL,kBAAmBlG,KAHd,SAIL,yBAA0BA,KAJrB,WAKL,2BAA4BA,KALvB,aAML,qBAAsBA,KAAKoL,YAI/Be,cAhBQ,WAiBN,OAAOnM,KAAP,UAEFoM,aAnBQ,WAoBN,qBAAepM,KAAf,OAEFqM,qBAtBQ,WAuBN,OAAOrM,KAAKoL,SACRpL,KAAKoH,cADF,QAEFpH,KAAK2J,QAAQ3J,KAAKoH,cAAlB,KAAD,eAFJ,QAIFhC,WA3BQ,WA4BN,OAAOpF,KAAKsM,UAAY,CAAC,CACvBpN,KADuB,gBAEvBoG,MAAOtF,KAFgB,KAGvBuM,KAAM,CACJC,iBAAkBxM,KAAKwM,yBAJ3B,GAQFC,cApCQ,WAqCN,cAEFC,SAvCQ,WAwCN,OAAO1M,KAAK6K,OAAS7K,KAArB,YAEF2M,QA1CQ,WA2CN,OAAOjL,QAAQ1B,KAAK0M,UAAY1M,KAAKsJ,aAArC,YAEFsD,QA7CQ,WA8CN,OAAO5M,KAAKoH,cAAcvD,OAA1B,GAEFgJ,SAhDQ,WAiDN,IAAM7H,EAAUhF,KAAK8M,QAAW9M,KAAK8M,OAAOC,QAAZ,SAAhC,SACM1J,EAAQ2B,EAAU,kBACtB,GAAW,GADb,GAIA,MAAO,CACL3B,MAAO,oCAAF,IAEH8F,GAAInJ,KAAKoM,eAEXjN,MAAO,CACLuH,OAAQ1G,KADH,SAELmI,MAAOnI,KAFF,UAGL2G,MAAO3G,KAHF,MAIL4G,aAAc5G,KAJT,aAKL6G,MAAO7G,KALF,iBAML8G,aAAc9G,KANT,aAOL+G,SAAU/G,KAPL,SAQLgH,UAAWhH,KARN,UASLiH,WAAYjH,KAAKgN,SAASC,KAAKC,EAAElN,KAT5B,YAULoH,cAAepH,KAAKoH,eAEtBhE,GAAI,CACF+J,OAAQnN,KAAKoN,YAEfC,YAAa,CACX9F,KAAMvH,KAAKsJ,aAAa/B,QAI9B+F,WA/EQ,WAoFN,OAJItN,KAAK6B,OAAO,YAAc7B,KAAK6B,OAA/B,iBAAyD7B,KAAK6B,OAAlE,iBACE,OAAAiD,EAAA,mEAGK9E,KAAK6H,eAAe0F,EAAavN,KAAxC,WAEFwN,iBAtFQ,WAuFN,OAAQxN,KAAKyN,YAAL,KACJzN,KADI,cAEJA,KAAKmM,cAAcuB,MAAM,EAAG1N,KAFhC,WAIF2N,YAAa,kBA3FL,GA4FRF,YA5FQ,WA6FN,IAAIG,EAAkB,kBAAO5N,KAAP,UAClBA,KAAKmL,UAAU0C,MADG,KAElB7N,KAFJ,UAWA,OAPI4E,MAAA,QAAJ,KACEgJ,EAAkBA,EAAA,QAAuB,cAEvC,OADAE,EAAIC,EAAJ,WACA,IAFF,KAMF,iCAAO,GAAP,IAEE9C,MAAOjL,KAFF,MAGLsF,MAAOtF,KAAK2N,aAAe3N,KAHtB,aAILgO,YAAaJ,EAAA,UAJR,GAKFA,KAKTjL,MAAO,CACLsL,cADK,SACQ,GACXjO,KAAA,eACAA,KAAA,oBAEFyL,aALK,WAKO,WACV3K,OAAA,YAAkB,WACZ,gBAAqB,eAAzB,kBACE,yCAA6C,EAA7C,iBAIN4K,aAZK,SAYO,GAAK,WACf5K,OAAA,YAAkB,kBAAM,qBAAxB,MAEA,IAEAd,KAAA,kBAEF6G,MAAO,CACLqH,WADK,EAELC,QAFK,SAEE,GAAK,WACNnO,KAAJ,YAIEA,KAAA,WAAe,WACb,cAAmB,mBAAsB,qBAAzC,OAIJA,KAAA,sBAKNH,QAAS,CAEPuO,KAFO,SAEH,GACF,yCACApO,KAAA,gBACAA,KAAA,aACAA,KAAA,kBAGFqO,aATO,WAWHrO,KAAKoC,UACLpC,KADA,UAEAA,KAHF,eAMAA,KAAA,kBAEFsO,kBAlBO,WAkBU,WACftO,KAAA,SAAcA,KAAKoL,SAAW,QAA9B,GACApL,KAAA,iBACAA,KAAA,WAAe,kBAAM,eAAoB,cAAzC,WAEIA,KAAJ,cAAsBA,KAAK0L,cAAe,IAE5Cc,iBAzBO,SAyBS,GACd,OAAKxM,KAAL,eAGGA,KAAD,gBAIEA,KAAD,eACAA,KAAKuO,aAAaC,SAAS9K,EAL5B,UAQA1D,KARA,MASCA,KAAKyO,IAAID,SAAS9K,EATnB,SAUAA,EAAA,SAAa1D,KAXf,KAcFiM,iBA1CO,SA0CS,GAEd,IADA,IAAMyC,EAAe,IAArB,IACSzN,EAAT,EAAoBA,EAAQ0N,EAA5B,WAAiD,CAC/C,IAAMpH,EAAOoH,EAAb,GACMzM,EAAMlC,KAAK+J,SAF8B,IAK9C2E,EAAA,IAAD,IAA0BA,EAAA,MAA1B,GAEF,OAAO9J,MAAA,KAAW8J,EAAlB,WAEFE,kBArDO,SAqDU,GAAc,WACvB5H,EAAYhH,KAAK+J,SAAvB,GAEA,OAAQ/J,KAAKiO,eAAN,eAAsC,SAAAY,GAAD,OAAe,kBAAqB,WAArB,GAA3D,OAEFN,WA1DO,WA2DL,OAAOvO,KAAKgB,MAAM8N,MAAQ9O,KAAKgB,MAAM8N,KAAK9N,MAA1C,SAEF+N,iBA7DO,SA6DS,KAA6B,WACrCC,EACJhP,KAAKoC,UACLpC,KADA,UAEAA,KAAKkJ,YAHP,GAMA,OAAOlJ,KAAK6H,eAAeoH,EAApB,KAA2B,CAChCpJ,YADgC,iBAEhCxC,MAAO,CAAE6G,UAAW,GACpB/K,MAAO,CACLoB,MAAOP,KAAK+K,iBADP,EAEL3I,SAFK,EAGLgG,WAAYnH,IAAUjB,KAHjB,cAILkP,MAAOlP,KAAKuL,YAEdnI,GAAI,CACFgD,MAAQ,SAAA1C,GACN,IAEAA,EAAA,kBAEA,oBAEF,cAAe,kBAAM,mBAEvBR,IAAKiM,KAAA,UAAenP,KAAK+J,SAApB,KACJ/J,KAAK2J,QApBR,KAsBFyF,kBA1FO,SA0FU,OACf,IAAMjH,EAAQlH,IAAUjB,KAAV,eAAgCA,KAA9C,cACMgP,EACJhP,KAAKoC,UACLpC,KAAKkJ,YAFP,GAKA,OAAOlJ,KAAK6H,eAAe,MAAO7H,KAAKyH,aAAaU,EAAO,CACzDtC,YADyD,iDAEzDM,MAAO,CACL,gCAAiC6I,GAEnC9L,IAAKiM,KAAA,UAAenP,KAAK+J,SAApB,MALA,UAMA/J,KAAK2J,QAAQpC,IANb,OAMqB8H,EAAO,GANnC,QAQFC,eAzGO,WA0GL,IAAMC,EAAavP,KAAnB,gBACMqI,EAAQrI,KAFF,WAcZ,OARI4E,MAAA,QAAJ,GACE2K,EAAA,KAD6B,IAI7BA,EAAA,SAAsBA,EAAA,UAAtB,GACAA,EAAA,kBAGK,CACLvP,KADK,cAELA,KAAK6H,eAAe,MAAO,CACzBhC,YADyB,iBAEzBT,WAAYpF,KAAKoF,YAChB,CACDpF,KADC,WAEDA,KAAKwP,OAASxP,KAAKyP,SAAnB,UAFC,OAIDzP,KAAK0P,OAAS1P,KAAKyP,SAAnB,UAJC,KAKDzP,KALC,eAMDA,KANC,cAODA,KAZG,mBAcLA,KAdK,UAeLA,KAfF,gBAkBF2P,QAzIO,SAyIA,OAKL,IAAM5J,EAAO6J,EAAA,2CAAb,GAaA,MAXA,WAAIvQ,IAEF0G,EAAA,iBAAyB,OAAA8J,EAAA,MAAU9J,EAAA,YAAD,KAA0B,CAC1D1C,MAAO,CACL6G,SAAUnE,EAAA,wCADL,KAEL,cAFK,OAGL,kBAAcnG,MAKpB,GAEFkQ,SA7JO,WA8JL,IAAMzH,EAAQ,qCAAd,MAgBA,cAdOA,EAAA,WAAP,KAEAA,EAAA,KAAa,OAAAwH,EAAA,MAAUxH,EAAD,KAAc,CAClCwB,SAAU,CAAEvE,MAAO,MACnBjC,MAAO,CACL0M,UADK,EAEL1Q,KAFK,OAGL,gBAAiBmE,OAAOxD,KAHnB,UAIL,wBAAyB,eAAqBA,KAAKgB,MAAN,KAJxC,iBAKLgP,aAAc,eAAqB3H,EAAD,kCAEpCjF,GAAI,CAAE6M,SAAUjQ,KAAKkQ,cAGvB,GAEFC,eAhLO,WAiLL,OAAOnQ,KAAK6H,eAAe,QAAS,CAClCgC,SAAU,CAAEvE,MAAOtF,KAAK4L,WACxBvI,MAAO,CACLhE,KADK,SAELH,KAAMc,KAAKoQ,OAAOlR,SAIxBmR,aAzLO,WA0LL,IAAMzO,EAAS,yCAAf,MAUA,OARAA,EAAA,4CACKA,EAAA,KADgB,OAArB,IAEE2B,KAFmB,SAGnB,gBAHmB,UAInB,gBAAiBC,OAAOxD,KAJL,cAKnB,YAAaA,KAAKoM,eAGpB,GAEFkE,QAtMO,WAwML,OAAItQ,KAAK6B,OAAO,YAAc7B,KAAK6B,OAA/B,iBAAyD7B,KAAK6B,OAAlE,eACS7B,KAAP,kBAEOA,KAAP,YAGJuQ,gBA9MO,WA8MQ,WACPC,EAAQ,CAAC,eAAgB,UAAW,eAA5B,QACJ,SAAAC,GAAQ,OAAI,SADR,WAEP,SAAAA,GAAQ,OAAI,4BAAgC,CAC/CzG,KAAMyG,GACL,SALQ,OASb,OAAOzQ,KAAK6H,eAAe0F,EAAa,OAAjC,OAAiC,CAAjC,GACFvN,KAAK6M,UADV,IAIF6D,QA3NO,WA2NA,WACCvR,EAAQa,KAAd,YAgBA,OAfAb,EAAA,UAAkBa,KAAKgB,MAFlB,cAQH,KAAAhB,KAAA,aACAA,KAAA,QAHF,WAIEA,KAAA,OAEAb,EAAA,OAAea,KAAf,IAEAb,EAAA,OAAea,KAAf,OAGKA,KAAK6H,eAAe8I,EAApB,KAA2B,CAChCtN,MAAO,CAAEE,UAAM3D,GACfT,QACAiE,GAAI,CACFiF,MAAQ,SAAAnG,GACN,iBACA,gBAGJ0O,IAAK,QACJ,CAAC5Q,KAVJ,aAYF6Q,cAxPO,WAyPL,IAGA,EAHIhN,EAAS7D,KAAKoH,cAAlB,OACMzB,EAAW,IAAIf,MAArB,GAIEkM,EADE9Q,KAAKsJ,aAAT,UACiBtJ,KAAf,iBACSA,KAAJ,SACUA,KAAf,iBAEeA,KAAf,kBAGF,MAAO6D,IACL8B,EAAA,GAAmBmL,EACjB9Q,KAAKoH,cADwB,KAG7BvD,IAAW8B,EAAA,OAHb,GAOF,OAAO3F,KAAK6H,eAAe,MAAO,CAChChC,YAAa,wBADf,IAIFkL,iBAjRO,SAiRS,KAA6B,WAC3C,OAAO/Q,KAAKsJ,aAAa0H,UAAW,CAClC3N,MAAO,CACL8C,MAAO,kBAEToD,OAJkC,KAKlChC,OACAtG,QACAkM,OAAS,SAAAzJ,GACPA,EAAA,kBACA,mBAEFuN,SAAUhQ,IAAUjB,KAXc,cAYlCoC,SAAUpC,KAAKoC,UAAYpC,KAAK+P,YAGpCmB,aAjSO,WAkSL,OAAOlR,KAAKgB,MAAM8N,KAAQ9O,KAAKgB,MAAM8N,KAA9B,WAAP,GAEF5F,YApSO,SAoSI,GACT,OAAO,eAAoB3B,EAAMvH,KAAP,cAA1B,IAEF2J,QAvSO,SAuSA,GACL,OAAO,eAAoBpC,EAAMvH,KAAP,SAA1B,IAEF+J,SA1SO,SA0SC,GACN,OAAO,eAAoBxC,EAAMvH,KAAP,UAAuBA,KAAK2J,QAAtD,KAEFwH,OA7SO,SA6SD,GACJzN,GAAK1D,KAAKoR,MAAM,OAAhB1N,IAEF2N,YAhTO,SAgTI,GACLrR,KAAJ,SAAmBA,KAAKoN,WAAxB,GACKpN,KAAKsR,SAFa,MAKvB,IAAItR,KAAKoH,cAAcvD,OACrB7D,KAAA,gBAEAA,KAAA,gBAEFA,KAAA,kBAEFuR,QA5TO,SA4TA,GACDvR,KAAJ,aAEKA,KAAKwR,cAAc9N,EAAxB,UACE1D,KAAA,iBAGGA,KAAL,YACEA,KAAA,aACAA,KAAA,gBAGFA,KAAA,mBAEFyR,UA1UO,SA0UE,GACP/N,EAAA,iBACI1D,KAAJ,eACE0D,EAAA,kBACA1D,KAAA,kBAGJkQ,WAjVO,SAiVG,GAAkB,WAC1B,KACElQ,KAAKoL,UACLpL,KADA,UAEAA,KAHF,gBAMA,IAAM0R,EAPoB,IAQpBC,EAAMC,YAAZ,MACID,EAAM3R,KAAN,uBAAJ,IACEA,KAAA,yBAEFA,KAAA,sBAA6B0D,EAAA,IAA7B,cACA1D,KAAA,yBAEA,IAAMiB,EAAQjB,KAAKgM,SAAS6F,WAAU,SAAAtK,GACpC,IAAMkB,GAAQ,cAAD,IAAb,WAEA,OAAOA,EAAA,yBAA8B,EAArC,yBAEIlB,EAAOvH,KAAKgM,SAAlB,IACA,IAAI/K,IACFjB,KAAA,SAAgBwB,KAAA,IAASxB,KAAT,SAAwBiB,EAAxC,GACAjB,KAAA,SAAcA,KAAKsL,aAAe/D,EAAOvH,KAAK+J,SAA9C,IACA/J,KAAA,WAAe,kBAAM,aAArB,cACAI,YAAW,kBAAM,eAAjB,SAGJ0R,UA7WO,SA6WE,GAAkB,WACzB,IAAI9R,KAAK+P,UAAYrM,EAAA,UAAc,OAAnC,KAEA,IAAMqO,EAAUrO,EAAhB,QACMoL,EAAO9O,KAAKgB,MAJO,KAczB,GAPI,CACF,OADE,MAEF,OAFE,gBAAJ,IAGqBhB,KAAKqO,eAE1BrO,KAAA,mBAEA,EAeA,OAXIA,KAAK0L,cAAgBqG,IAAY,OAArC,KACE/R,KAAA,WAAe,WACb8O,EAAA,mBACA,4BAAgCA,EAAhC,eASD9O,KAAD,cACA,CAAC,OAAD,GAAc,OAAd,eAFF,GAGSA,KAAKgS,SAhCW,GAmCrBD,IAAY,OAAhB,IAAqC/R,KAAKyR,UAnCjB,GAsCrBM,IAAY,OAAhB,IAAqC/R,KAAKiS,UAtCjB,GAyCrBF,IAAY,OAAhB,MAAuC/R,KAAKkS,YAAZ,QAAhC,IAEFC,mBAxZO,SAwZW,GAIhB,KACGnS,KAAKoL,WAAN,GACApL,KAAKkR,gBAFP,IAKA,IAAMpC,EAAO9O,KAAKgB,MAAlB,KAEA,GAAK8N,GAAS9O,KAAd,QAGA,IAAK,IAAI6O,EAAT,EAAgBA,EAAIC,EAAA,MAApB,OAAuCD,IACrC,YAAIC,EAAA,uCAAwD,CAC1D9O,KAAA,gBACA,SAINoS,UA7aO,SA6aE,GAAe,WAEpBpS,KAAKqS,cAAL,IACA3O,EAAA,QACC1D,KAHH,aAQMA,KAAKwR,cAAc9N,EAAvB,QACE1D,KAAA,WAAe,kBAAO,gBAAqB,EADX,gBAIvBA,KAAJ,aACLA,KAAA,kBAIJ,+CAEFsS,SAjcO,WAicC,WACN,GAAKtS,KAAL,aAEO,CACL,GAAIA,KAAK2L,UAAY3L,KAAKmM,cAA1B,OAAgD,OAEhD,IAAMoG,EACJvS,KAAKuO,aAAaiE,cACjBxS,KAAKuO,aAAakE,UACnBzS,KAAKuO,aAHe,cAAtB,IAMA,IACEvO,KAAA,mBAXF0S,uBAAsB,kBAAO,yBAA7B,MAeJR,YAldO,SAkdI,GACTxO,EAAA,kBAEFuO,UArdO,SAqdE,GACP,IAAMnD,EAAO9O,KAAKgB,MAAlB,KAEA,MAEA,IAAM2R,EAAa7D,EALM,YAUtB9O,KAAD,aAEAA,KAHF,cAKE0D,EAAA,iBACAA,EAAA,kBAEAiP,EAAA,SAKA3S,KAAA,UAGJgS,SA9eO,SA8eC,GACN,IAAMlD,EAAO9O,KAAKgB,MAAlB,KAEA,MAOA,GALA0C,EALwB,iBAUpB1D,KAAJ,SAAmB,OAAOA,KAAP,eAEnB,IAAM+R,EAAUrO,EAZQ,QAgBxBoL,EAAA,YAEAhO,OAAA,uBAA6B,WAC3BgO,EAAA,WACA,YAAAiD,EAA0BjD,EAA1B,WAA4CA,EAA5C,WACAA,EAAA,YAAmBA,EAAA,WAAnB,aAGJ1B,WAtgBO,SAsgBG,GAAc,WACtB,GAAKpN,KAAL,SAGO,CACL,IAAMiO,GAAiBjO,KAAKiO,eAAN,IAAtB,QACMY,EAAI7O,KAAK4O,kBAAf,GAkBA,IAhBA,IAAAC,EAAWZ,EAAA,OAAAY,EAAX,GAAwCZ,EAAA,KAAxC,GACAjO,KAAA,SAAciO,EAAA,KAAmB,SAAAY,GAC/B,OAAO,iBAAwB,WAA/B,OAMF7O,KAAA,WAAe,WACb,cACG,aADH,uBAOGA,KAAL,SAAoB,OAEpB,IAAM4S,EAAY5S,KAAlB,eAMA,GAJAA,KAAA,cAxBK,GA4BDA,KAAJ,aAAuB,OAEvBA,KAAA,WAAe,kBAAM,eAArB,WAhCAA,KAAA,SAAcA,KAAKsL,aAAe/D,EAAOvH,KAAK+J,SAA9C,IACA/J,KAAA,iBAkCJ6S,aA3iBO,SA2iBK,GACV7S,KAAA,aAAqBA,KAAKgB,MAAM8N,KAAX,UAArB,IAEFgE,iBA9iBO,WA8iBS,aACR1L,EAAN,GACM2L,EAAU/S,KAAD,UAAmB4E,MAAA,QAAc5E,KAAjC,eAEXA,KAFJ,cACI,CAACA,KADU,eAFD,iBAMd,GANc,yBAMd,EANc,QAONiB,EAAQ,sBAAwB,SAAA+R,GAAC,OAAI,kBACzC,WADyC,GAEzC,WAFF,OAKI/R,GAAJ,GACEmG,EAAA,KAAmB,WAAnB,KAPJ,2BAA4B,IANd,8BAiBdpH,KAAA,iBAEFsR,SAjkBO,SAikBC,GACN,IAAM2B,EAAWjT,KAAjB,cACAA,KAAA,gBACAsF,IAAA,GAAsBtF,KAAKoR,MAAM,SAAjC9L,IAEFkM,cAtkBO,SAskBM,GAGX,IAAM0B,EAAclT,KAAKgB,MAAzB,gBAEA,OAAOkS,IAAgBA,IAAA,GAA0BA,EAAA,SAAjD,S,sNCz0BS,sBAAO,EAAD,0BAKnB,eALmB,aAMnB,eANa,sBAON,CACPhU,KADO,SAGPC,MAAO,CACLgU,OAAQ,CACN9T,KADM,QAENE,SAAS,GAEX8J,YAAa,CACXhK,KADW,OAEXE,QAFW,WAGT,OAAKS,KAAL,UAEOA,KAAKoT,UAAZ,YAF4B,KAKhC7S,MAbK,QAcL8S,UAAW,CACThU,KADS,OAETE,QAAS,WAEX6C,SAlBK,QAmBLkR,UAnBK,QAoBLC,OApBK,QAqBLC,WAAY,CACVnU,KADU,OAEVE,QAAS,aAEXkU,MAzBK,QA0BLC,KA1BK,QA2BLC,SA3BK,QA4BLC,KA5BK,QA6BLC,IAAK,CACHxU,KADG,OAEHE,QAAS,QAEXuU,UAjCK,OAkCLxO,MAAO,MAGT7F,KAAM,iBAAO,CACXsU,WAAY,mBAGdnT,SAAU,CACRsF,QADQ,WAEN,oEACE,UADK,GAEF,qCAFE,OAAP,IAGE,oBAAqBlG,KAHhB,YAIL,mBAAoBA,KAJf,SAKL,oBAAqBA,KALhB,UAML,gBAAiBA,KANZ,MAOL,eAAgBA,KAPX,OAQL,oBAAqBA,KARhB,MASL,mBAAoBA,KATf,SAUL,eAAgBA,KAVX,KAWL,oBAAqBA,KAXhB,UAYFA,KAZE,cAaFA,KAbE,iBAcFA,KAAKgU,eAGZC,SAnBQ,WAoBN,OAAOvS,QAAQ1B,KAAf,QAEFkU,YAtBQ,WAuBN,OAAOxS,QACL,gDACA1B,KAFF,aAOJmU,QA1EO,WA0EA,WACCC,EAAgB,CACpB,CAAC,UADmB,YAEpB,CAAC,WAFmB,eAGpB,CAAC,QAHmB,UAIpB,CAAC,SAJH,iBAQAA,EAAA,SAAsB,YAA4B,0BAA3B,EAA2B,KAA5B,EAA4B,KAC5C,wBAAJ,IAA0C,eAASC,EAAUC,EAAnB,OAI9CzU,QAAS,CACPuG,MADO,SACF,GACHpG,KAAA,iBAEAA,KAAA,WAAkBA,KAAlB,UAEFuU,UANO,WAOL,IAAM5O,EAAN,GAWA,OATI3F,KAAJ,UACE2F,EAAA,KACE3F,KAAK6H,eAAe,EAApB,KAA2B,CACzBhC,YADyB,iBAEzB1G,MAAO,CAAEqV,MAAM,IACdxU,KAJL,aAQKA,KAAK6H,eAAe,EAApB,KAAP,IAEF4M,SApBO,WAoBC,WACN,OAAOzU,KAAK6H,eAAe,EAApB,KAA2B,CAChChC,YADgC,gBAEhC1G,MAAO,CACLuV,OADK,EAELC,KAAM,IAERvR,GAAI,CACFgD,MAAQ,SAAA1C,GACNA,EAAA,kBACAA,EAAA,iBAEA,uBACA,+BAGH1D,KAfH,YAiBF4U,WAtCO,WAuCL,OAAO5U,KAAK6H,eAAe,OAAQ,CACjChC,YAAa,mBACZ,CACD7F,KAAKuT,QAAUvT,KADd,YAEDA,KAAK6B,OAFJ,QAGD7B,KAAKiU,UAAYjU,KALnB,eAUJ4B,OAzIO,SAyID,GACJ,IAAM+D,EAAW,CAAC3F,KAAlB,cADO,EAEaA,KAApB,oBAAI,EAFG,EAEH,IAAOP,EAFJ,EAEIA,KAEXA,EAAA,uCACKA,EADQ,OAAb,IAEE6T,UAAWtT,KAAKsT,UAAY,YAFjB,EAGXpJ,SAAUlK,KAAKoT,YAAcpT,KAAnB,WAAuCP,EAAA,MAAYyK,WAE/DzK,EAAA,gBAAsB,CACpBP,KADoB,OAEpBoG,MAAOtF,KAAKmT,SAEd1T,EAAOO,KAAK6U,mBAAmB7U,KAAxB,MAAPP,GAEA,IAAM0I,EAAQnI,KAAK8T,WAAc9T,KAAK2T,UAAY3T,KAAlD,MAEA,OAAO4F,EAAEiO,EAAK7T,KAAKyH,aAAaU,EAAxB,GAAR,O,0EClLW,qBAAiB,CAC9BjJ,KAD8B,YAG9BC,MAAO,CACLoH,MADK,QAELuO,SAAUpT,SAGZE,OAR8B,SAQxB,GAEJ,MAIA,OAHK5B,KAAK+U,OAAN,MAAJ,cAAyB/U,KAAK+U,OAAOxR,OACnCyR,EAAchV,KAAK8U,SAAW,WAA9B,cAEKlP,EAAE,KAAM,CACbO,MAAO,gBACL,aADK,EAEL,mBAAoBnG,KAFf,MAGL,sBAAuBA,KAHlB,UAIFA,KAAKwG,cAEVnD,MAAO,gBACLE,KADK,YAEL,mBAFK,GAGFvD,KAAK+U,QAEV3R,GAAIpD,KAAKyG,iB,+TCzBT1E,EAAa,OAAAuE,EAAA,MAAO,EAAD,YAAzB,QAiBe,EAAAvE,EAAA,gBAAoC,CACjD7C,KADiD,WAGjDC,MAAO,CACL8V,cADK,QAELhP,MAFK,QAGLD,KAHK,QAILkP,SAAU,CACR7V,KAAM,CAACC,OADC,QAERC,QAAS,QAEX4V,SAAU,CAAC7V,OARN,QASL0O,YAAa,CACX3O,KAAM,CAACC,OADI,QAEXC,QAAS,GAEX6V,UAAW,CACT/V,KAAM,CAACC,OADE,QAETC,QAAS,GAEX8V,WAAY,CACVhW,KAAM,CAACC,OADG,QAEVC,QAAS,GAEX+V,SAAU,CACRjW,KAAM,CAACC,OADC,QAERC,QAAS,GAEXgW,WAAY,CACVlW,KAAM,CAACC,OADG,QAEVC,QAAS,GAEXiW,eA7BK,QA8BLhL,YA9BK,QA+BLiL,UAAW,CACTpW,KADS,OAETE,QAAS,MAEXmW,UAAW,CACTrW,KADS,OAETE,QAAS,MAEXoW,OAAQ,CACNtW,KAAM,CAACC,OADD,QAENC,QAAS,OAIbE,KAAM,iBAAO,CACXmW,UADW,EAEXC,UAFW,EAGXC,YAHW,KAIXC,gBAJW,EAKXC,WAAY,CACVhU,UAAW,CACTiU,IADS,EAETzB,KAFS,EAGT0B,OAHS,EAITxB,MAJS,EAKTyB,MALS,EAMTC,OANS,EAOTC,UAPS,EAQT7D,aARS,EAST8D,WAAY,GAEdvV,QAAS,CACPkV,IADO,EAEPzB,KAFO,EAGP0B,OAHO,EAIPxB,MAJO,EAKPyB,MALO,EAMPC,OANO,EAOPC,UAPO,EAQP7D,aAAc,IAGlB+D,gBA5BW,EA6BXC,WA7BW,EA8BXC,gBA9BW,EA+BXC,iBA/BW,EAgCXC,UAhCW,EAiCXC,YAjCW,EAkCXC,WAlCW,0BAmCXnW,eAAgB,IAGlBE,SAAU,CACRkW,aADQ,WAEN,IAAMC,EAAI/W,KAAKgW,WAAf,UACMgB,EAAIhX,KAAKgW,WAAf,QACMiB,IAAiC,IAAhBjX,KAAKuE,OAAmBwS,EAAxB,WAAuCA,EAAxC,OAAtB,EACM5B,EAAW3T,KAAA,IAASuV,EAAT,MAAkBC,EAAnC,OACIxC,EAAJ,EAEA,GADAA,GAAQxU,KAAKwU,KAAOyC,GAAiB9B,EAAW4B,EAAxC,OAAR,EACI/W,KAAJ,QAAkB,CAChB,IAAMkV,EAAWgC,MAAM5X,OAAOU,KAAb,WACb+W,EADa,MAEbvV,KAAA,IAASuV,EAAT,MAAkBzX,OAAOU,KAF7B,WAIAwU,GAAQxU,KAAKwU,MAAL,EAAwBuC,EAAhC,MAKF,OAHI/W,KAAJ,YAAoBwU,GAAQrU,SAASH,KAAjB,YAChBA,KAAJ,aAAqBwU,GAAQrU,SAASH,KAAjB,aAErB,GAEFmX,YApBQ,WAqBN,IAAMJ,EAAI/W,KAAKgW,WAAf,UACMgB,EAAIhX,KAAKgW,WAAf,QACIC,EAAJ,EASA,OAPIjW,KAAJ,MAAciW,GAAOc,EAAA,OAAWC,EAAlB,SACd,IAAIhX,KAAKuE,OAAkB0R,GAAOc,EAAlC,UACKd,GAAOc,EAAA,IAAQ/W,KAAf,YACDA,KAAJ,UAAkBiW,GAAOjW,KAAKiW,KAAOc,EAAZ,OAAuBA,EAA9B,QACd/W,KAAJ,WAAmBiW,GAAO9V,SAASH,KAAhB,WACfA,KAAJ,cAAsBiW,GAAO9V,SAASH,KAAhB,cAEtB,GAEFoX,aAlCQ,WAmCN,QAASpX,KAAK6B,OAAP,aAA6B7B,KAAKsJ,aAAlC,aAA8DtJ,KAA9D,aAAkFA,KAAzF,iBAIJ2C,MAAO,CACLP,SADK,SACG,GACNF,GAAOlC,KAAP,kBAEFW,SAJK,SAIG,GACFX,KAAJ,WAEAkC,EAAMlC,KAAH,eAAyBA,KAA5B,mBAEFyV,UATK,mBAULC,UAAW,oBAGb/Q,YA1IiD,WA2I/C3E,KAAA,+BAAwBc,QAG1BjB,QAAS,CACPwX,iBADO,WAEL,MAAO,CACLhB,UADK,EAELC,WAFK,EAGL9D,aAHK,EAILyD,IAAKjW,KAAK0V,WAAa1V,KAJlB,UAKLkW,OAAQlW,KAAK0V,WAAa1V,KALrB,UAMLwU,KAAMxU,KAAKyV,WAAazV,KANnB,UAOL0U,MAAO1U,KAAKyV,WAAazV,KAPpB,UAQLoW,OARK,EASLD,MAAO,IAGXmB,SAdO,aAePC,SAfO,SAeC,GACN,OAAO,gBAA8B,IAAhBvX,KAAKuE,OACtBvE,KADiB,aAEjBA,KAAKwX,cAAcxX,KAAnB,aAFJ,KAIFyX,QApBO,WAqBL,OAAO,gBAA8B,IAAhBzX,KAAKuE,OACtBvE,KADiB,YAEjBA,KAAK0X,cAAc1X,KAFvB,eAIFwX,cAzBO,SAyBM,KACX,IAAMG,EAAYnD,EAAA,EAAmBxU,KAAnB,UAAlB,GAQA,OALEwU,IADIxU,KAAD,MAAcA,KAAf,QAA8B2X,EAAlC,EACSnW,KAAA,IAASgT,EAAT,EAAP,GAEOhT,KAAA,MAAP,IAGKgT,EAAOxU,KAAd,iBAEF0X,cApCO,SAoCM,GACX,IAAME,EAAiB5X,KAAvB,iBACM6X,EAAQ7X,KAAK4W,YAAnB,EACM5U,EAAYhC,KAAKgW,WAAvB,UACM8B,EAAgB9X,KAAKgW,WAAWjV,QAAtC,OACMgX,EAAc9B,EAApB,EACM+B,EAAgBH,EANE,EAyBxB,OAfIG,GACFhY,KADE,gBAIFgC,EAAA,IAJF,EAMEiU,EAAMjW,KAAK4W,aAAe5U,EAAA,IAD1B,GAGSgW,IAAkBhY,KAAtB,cACLiW,EAAM4B,EAAA,EADyC,GAGtC5B,EAAMjW,KAAN,cAA2BA,KAA/B,gBACLiW,EAAMjW,KAAK4W,YAAX,IAGKX,EAAA,MAAP,GAEFgC,aA/DO,WAgEAjY,KAAL,WAEAA,KAAA,YAEFkY,eApEO,WAqELlY,KAAA,mBAEAA,KAAA,cAEFmY,oBAzEO,WA0EDnY,KAAJ,YACEA,KAAA,YAAmBA,KAAK+V,eAAiB,EAAI/V,KAA7C,iBAGJoY,oBA9EO,WA+EL,QAAIpY,KAAKuE,OAAT,CACA,IAAI8T,EAAKrY,KAAT,eACA,QAAW,CACT,aAAIc,OAAA,6BAEF,YADAd,KAAA,mBAGFqY,EAAKA,EAAL,aAEFrY,KAAA,oBAEFsY,WA1FO,aA2FP7U,sBA3FO,WA2Fc,WACbf,EAAY,kDAAlB,MAEM6O,EAAU7O,EAAhB,MAWA,OATAA,EAAA,MAAmB,SAAAgB,GACb,EAAJ,aACE6N,GAAWA,EAAX,GAGF,YAAiB7N,EAAjB,QACA,YAAiBA,EAAjB,SAGF,GAEF6U,eA3GO,WA4GL,OAAKvY,KAAL,UAEOc,OAAA,aACLS,SAAA,gBADF,aAF4B,GAK9BiX,cAjHO,WAkHL,OAAKxY,KAAL,UAEOc,OAAA,aACLS,SAAA,gBADF,WAF4B,GAK9BkX,aAvHO,WAwHL,OAAKzY,KAAL,UAEOc,OAAA,aACLS,SAAA,gBADF,UAF4B,GAK9BmX,4BA7HO,SA6HoB,GACzB,IAAMC,EAAON,EAAb,wBACA,MAAO,CACLpC,IAAKzU,KAAA,MAAWmX,EADX,KAELnE,KAAMhT,KAAA,MAAWmX,EAFZ,MAGLzC,OAAQ1U,KAAA,MAAWmX,EAHd,QAILjE,MAAOlT,KAAA,MAAWmX,EAJb,OAKLxC,MAAO3U,KAAA,MAAWmX,EALb,OAMLvC,OAAQ5U,KAAA,MAAWmX,EAAX,UAGZC,QAxIO,SAwIA,GACL,IAAKP,IAAOrY,KAAZ,UAA4B,OAAO,KAEnC,IAAM2Y,EAAO3Y,KAAK0Y,4BAHI,GAMtB,QAAI1Y,KAAKuE,OAAkB,CACzB,IAAMsU,EAAQ/X,OAAA,iBAAd,GAEA6X,EAAA,KAAYxY,SAAS0Y,EAArB,YACAF,EAAA,IAAWxY,SAAS0Y,EAApB,WAGF,UAEFC,UAvJO,SAuJE,GAAgB,WACvBpG,uBAAsB,WACpB,IAAM2F,EAAK,QAAX,QAEKA,GAAL,SAAWA,EAAA,eAKXA,EAAA,6BACAhY,IACAgY,EAAA,sBANEhY,QASN0Y,gBArKO,WAqKQ,WACb,OAAO,IAAIC,SAAc,SAAAC,GAAO,OAAIvG,uBAAsB,WACxD,kBAAuB,iBAAsB,EAA7C,SACAuG,WAGJC,iBA3KO,WA2KS,WACdlZ,KAAA,+BAAwBc,OACxBd,KAAA,sBACAA,KAAA,sBACAA,KAAA,UAAiBuB,SAAA,gBAAjB,YAEA,IAAMyU,EAAkB,CACtBhU,UAAW,kBAAKhC,KAAKgW,WAAWhU,WAChCjB,QAAS,kBAAKf,KAAKgW,WAAWjV,UAIhC,IAAKf,KAAD,cAAsBA,KAA1B,SACEgW,EAAA,UAAuBhW,KAAvB,uBACK,CACL,IAAMgC,EAAYhC,KAAlB,eACA,MAAgB,OAEhBgW,EAAA,UAAuBhW,KAAK4Y,QAA5B,GACA5C,EAAA,qBAAkChU,EAAlC,YACA,IAAIhC,KAAKuE,OAGPyR,EAAA,oBAAiChU,EAAjC,UAEAgU,EAAA,sBAKJhW,KAAA,WAAe,WACb,kBAAuBgW,EAAA,QAAqB,UAAa,QAAzD,UAEA,sB,wECtVF,EAAa,OAAA1P,EAAA,MAAO,EAAD,mCAAzB,QAWe,gBAAkB,CAC/BpH,KAD+B,SAG/Bia,QAH+B,WAI7B,MAAO,CACLC,UADK,EAGLC,MAAOrZ,KAAKqZ,QAIhBjU,WAAY,CACVsF,aAAA,OACA4O,OAAA,QAGFna,MAAO,CACLoa,KADK,QAELlP,aAAc,CACZhL,KADY,QAEZE,SAAS,GAEX+K,oBAAqB,CACnBjL,KADmB,QAEnBE,SAAS,GAEX6C,SAVK,QAWLmI,YAXK,QAYLE,UAAW,CACTpL,KAAM,CAACC,OADE,QAETC,QAAS,QAEXia,QAhBK,QAiBLC,QAjBK,QAkBLjP,YAAa,CACXnL,KADW,QAEXE,SAAS,GAEX+C,YAtBK,QAuBLoX,OAAQ,CACNra,KADM,OAENE,QAAS,YAEXoa,WAAY,CACVta,KAAM,CAACqC,QADG,QAEVnC,QAAS,sBAIbE,KAjD+B,WAkD7B,MAAO,CACLma,kBADK,EAELC,cAFK,EAGLtD,gBAHK,EAIL3D,WAJK,EAKLkH,cALK,EAMLjO,cANK,KAOLkO,MAAO,KAIXnZ,SAAU,CACR+R,WADQ,WAEN,OAAO3S,KAAK+Z,MAAM/Z,KAAlB,YAEFga,eAJQ,WAKN,IAAMC,EAAYzY,KAAA,IAASxB,KAAKgW,WAAWjV,QAAzB,MAAwCmZ,WAAWla,KAArE,qBAEA,OAAKA,KAAL,KAEO,eAAcA,KAAKwX,cAAcxX,KAAnB,eAAd,KAAP,IAFuBA,KAAKuX,SAAS0C,IAArB,KAIlBE,oBAXQ,WAYN,IAAM/D,EAASpW,KAAKuZ,KAAL,QAEX,eAAcvZ,KAFlB,WAIA,OAAOoW,GAAP,KAEFgE,mBAlBQ,WAmBN,OAAO,eAAcpa,KAAd,WAAP,KAEFqa,mBArBQ,WAsBN,GAAIra,KAAJ,SACE,OAAO,eAAcA,KAAd,WAAP,IAGF,IAAMmV,EAAW3T,KAAA,IACfxB,KAAKgW,WAAWhU,UAAUmU,MAC1B7W,OAAOU,KADP,aAECA,KAAKuZ,KAAO,GAHE,GAIf/X,KAAA,IAASxB,KAAK2W,UAAd,GAJF,IAOMyD,EAAqBlD,MAAM/W,SAASH,KAAf,uBAEvBG,SAASH,KAFb,oBAIA,OAAO,eAAcwB,KAAA,MAAd,KAAP,KAKF8Y,cA1CQ,WA2CN,IAAMrE,EAAOjW,KAAD,KAER,eAAcA,KAAK0X,cAAc1X,KAFrC,oBACIA,KADQ,UAIZ,OAAOiW,GAAP,KAEFsE,kBAjDQ,WAkDN,OAAO7Y,QAAQ1B,KAAK+Z,MAAMS,MAAK,SAAA7S,GAAI,OAAIA,EAAA,UAAvC,OAEF8S,OApDQ,WAqDN,MAAO,CACLhQ,UAAWzK,KADN,oBAELmV,SAAUnV,KAFL,mBAGLkV,SAAUlV,KAHL,mBAILiW,IAAKjW,KAJA,cAKLwU,KAAMxU,KALD,eAML0a,gBAAiB1a,KANZ,OAOL2V,OAAQ3V,KAAK2V,QAAU3V,KAAKa,gBAKlC8B,MAAO,CACLhC,SADK,SACG,GACN,IAAUX,KAAK4S,WAAL,IAEZ8D,gBAJK,SAIU,GACb1W,KAAA,kBAEF4S,UAPK,SAOI,KACP,GAAI+H,KAAQ3a,KAAZ,MAAwB,CACtB,IAAM2H,EAAO3H,KAAK+Z,MAAlB,GACApS,EAAA,0CACA3H,KAAA,wBAA+B2H,EAAA,UAAiBA,EAAhD,aAGFiT,KAAQ5a,KAAR,OACEA,KAAK+Z,MAAMa,GAAMC,UAAUC,OAD7B,8BAKJ3G,QAjJ+B,WAmJzBnU,KAAK+U,OAAOgG,eAAhB,eACE,eAAQ,aAAR,OAIJnY,QAxJ+B,WAyJ7B5C,KAAA,UAAiBA,KAAjB,gBAGFH,QAAS,CACPyX,SADO,WACC,WAGNtX,KAHM,mBAKN0S,uBAAsB,WAEpB,0BAA4B,WACtB,QAAJ,UACE,oBAAyB,EAAzB,cACA,SAAc,0BAA+B,EAA7C,8BAKRsI,mBAhBO,WAiBL,IAAMvM,EAAMzO,KAAKgB,MAAjB,QACM2R,EAAalE,EAAA,cAAnB,wBACMwM,EAAexM,EAAA,aAAmBA,EAAxC,aAEA,OAAOkE,EACHnR,KAAA,MAAuBA,KAAA,MAAYmR,EAAA,UAAuBlE,EAAA,aAAvB,EAA8CkE,EAAA,aADpE,IAEblE,EAFJ,WAIFyM,aAzBO,WA0BL,OAAO/a,SAASH,KAAKgW,WAAWhU,UAAUwS,KAA1C,EAAiDxU,KAAK6Z,gBAExDsB,YA5BO,WA6BL,IAAM1M,EAAMzO,KAAKgB,MAAjB,QACM2R,EAAalE,EAAA,cAAnB,wBAMA,GAJA,IACEzO,KAAA,oBAGEA,KAAKyZ,UAAT,EACE,OAAOzZ,KAAP,YAGFA,KAAA,cAAqB4E,MAAA,KAAW5E,KAAX,eAArB,GAEA,IAAMob,EAA0BzI,EAAA,UAAuB3S,KAAvD,qBACMqb,EAAsB5M,EAAA,8BAA5B,UAEA,OAAOzO,KAAKmX,YAAciE,EAA0BC,EAApD,GAEFC,gBA/CO,SA+CQ,GAIb,GAFAtb,KAAA,WAEKA,KAAD,UAAmBA,KAAvB,kBAEO,GAAI0D,EAAA,UAAc,OAAlB,KAGA,GAAIA,EAAA,UAAc,OAAlB,KACL1D,KAAA,gBACK,GAAI0D,EAAA,UAAc,OAAlB,GACL1D,KAAA,eACK,IAAI0D,EAAA,UAAc,OAAd,QAAJ,IAAoC1D,KAAK4S,UAEvC,OADP5S,KAAA,MAAWA,KAAX,mBAGF0D,EAAA,sBAVE1D,KAAA,aAYJwM,iBAlEO,SAkES,GACd,IAAM5I,EAASF,EAAf,OAEA,OAAO1D,KAAKW,WACTX,KADI,cAELA,KAFK,eAGJA,KAAKgB,MAAMD,QAAQyN,SAHtB,IAKFlL,uBA1EO,WA2EL,IAAMiY,EAAa,mDAAnB,MAEA,OAAIvb,KAAK2S,YAAc3S,KAAK2S,WAA5B,GACE,iCAAO,GAAP,IAEE,wBAAyB3S,KAAK2S,WAAWxJ,KAI7C,GAEF1F,sBAtFO,WAuFL,IAAMf,EAAY,6CAAlB,MAMA,OAJK1C,KAAL,cACE0C,EAAA,QAAoB1C,KAApB,WAGF,GAEFwb,cA/FO,WAgGL,IAAMza,EAAUf,KAAhB,aAEA,OAAKA,KAAL,WAEOA,KAAK6H,eAAe,aAAc,CACvC1I,MAAO,CACLD,KAAMc,KAAK2Z,aAEZ,CAJH,IAF6B5Y,GAQ/B0a,cA1GO,WA0GM,WACLrW,EAA+B,CAAC,CACpClG,KADoC,OAEpCoG,MAAOtF,KAAK0W,kBAed,OAXK1W,KAAD,aAAqBA,KAAzB,cACEoF,EAAA,KAAgB,CACdlG,KADc,gBAEdoG,MAAO,WAAQ,eACfiH,KAAM,CACJC,iBAAkBxM,KADd,iBAEJ0b,QAAS,kBAAO,EAAD,KAAN,sBAAoB,EAAd,iCAKrB,GAEF9G,WA9HO,WA8HG,WACF+G,EAAU,CACdtY,MAAO,iCACFrD,KADE,mBAAF,IAEHuD,KAAM,SAAUvD,KAAV,OAAwBA,KAAK+U,OAA7B,KAA2C,SAEnDlP,YALc,kBAMdM,MAAO,iCACFnG,KADE,kBAAF,mBAEH,wBAAyBA,KAFpB,KAGL,yBAA0BA,KAHrB,eAIL4b,0BAA2B5b,KAJtB,UAKJA,KAAKwE,aAAN,QAA4B,IAE9BqU,MAAO7Y,KAbO,OAcdoF,WAAYpF,KAdE,gBAed4Q,IAfc,UAgBdxN,GAAI,CACFgD,MAAQ,SAAA1C,GACN,IAAME,EAASF,EAAf,OAEIE,EAAA,aAAJ,aACI,EAAJ,sBAA8B,gBAEhCiY,QAAS7b,KAAK8R,YAclB,OAVK9R,KAAD,UAAkBA,KAAtB,cACE2b,EAAA,GAAaA,EAAA,IAAb,GACAA,EAAA,cAAwB3b,KAAxB,mBAGEA,KAAJ,cACE2b,EAAA,GAAaA,EAAA,IAAb,GACAA,EAAA,cAAwB3b,KAAxB,mBAGKA,KAAK6H,eAAe,MAAO8T,EAAS3b,KAA3C,mBAEF8b,SAtKO,WAuKA9b,KAAKgB,MAAV,UAEAhB,KAAA,MAAa4E,MAAA,KAAW5E,KAAKgB,MAAMD,QAAQgb,iBAA3C,mBAEFC,kBA3KO,WA2KU,WACfhc,KAAA,iBAAsB,WAChB,EAAJ,iBAEA,oBACA,mBAGJic,kBAnLO,SAmLU,GAAe,WAE9Bjc,KAAA,kBAAuB,WACjB,yBAA4B0D,EAAhC,gBAEAgP,uBAAsB,WACpB,cACA,0BAINwJ,SA9LO,WA+LL,IAAMvU,EAAO3H,KAAK+Z,MAAM/Z,KAAK4S,UAA7B,GAEA,MAAW,CACT,IAAK5S,KAAK+Z,MAAV,OAAwB,OAKxB,OAHA/Z,KAAA,kBACAA,KAAA,WAKFA,KAAA,aACA,IAAI2H,EAAA,UAAsB3H,KAAKkc,YAEjCC,SA7MO,WA8ML,IAAMxU,EAAO3H,KAAK+Z,MAAM/Z,KAAK4S,UAA7B,GAEA,MAAW,CACT,IAAK5S,KAAK+Z,MAAV,OAAwB,OAKxB,OAHA/Z,KAAA,UAAiBA,KAAK+Z,MAAtB,YACA/Z,KAAA,WAKFA,KAAA,aACA,IAAI2H,EAAA,UAAsB3H,KAAKmc,YAEjCrK,UA5NO,SA4NE,GAAkB,WACzB,GAAIpO,EAAA,UAAc,OAAlB,IAAgC,CAE9BtD,YAAW,WAAQ,iBACnB,IAAM4B,EAAYhC,KAAlB,eACAA,KAAA,WAAe,kBAAMgC,GAAaA,EAAlC,gBAEChC,KAAD,UACA,CAAC,OAAD,GAAc,OAAd,eAAsC0D,EAFjC,WAIL1D,KAAA,aAIFA,KAAA,WAAe,kBAAM,kBAArB,OAEFoc,SA5OO,WA6OApc,KAAL,WAKAA,KAAA,0BACAA,KAPM,mBAcND,aAAaC,KAAb,eACAA,KAAA,cAAqBc,OAAA,WAAkBd,KAAlB,iBAArB,QAIJ4B,OA3Z+B,SA2ZzB,GAAG,WACDnC,EAAO,CACXoG,YADW,SAEXM,MAAO,CACL,mBACkB,KAAhBnG,KAAKuE,SAAL,IACAvE,KAAKuE,QACW,WAAhBvE,KAAKuE,QAETa,WAAY,CAAC,CACXiX,IADW,MAEXnd,KAFW,SAGXoG,MAAOtF,KAAKoc,YAIhB,OAAOxW,EAAE,MAAOnG,EAAM,EACnBO,KAAD,WAAmBA,KADC,eAEpBA,KAAKsc,iBAAgB,iBAAM,CACzB,wBAAoC,CAClCnd,MAAO,CACLsC,MADK,EAELwE,MAAO,EAFF,MAGLD,KAAM,EAAKA,OAEZ,CAAC,EATR,4B,kCCrdJ,gBAGe,2BAAW,CACxB9G,KADwB,aAGxBC,MAAO,CACLod,YAAa,MAGf9c,KAAM,iBAAO,CACXkB,UADW,EAEX6b,cAAe,OAGjB7Z,MAAO,CACLhC,SADK,SACG,GACN,EACEX,KAAA,cAAqBA,KAArB,YAEAA,KAAA,4BAAkCA,KAAlC,iBAKNH,QAAS,CACP4c,KADO,SACH,GAAY,WACdzc,KAAA,gBACAI,YAAW,WACT,sB","file":"js/chunk-3b78fcb6.f19011c0.js","sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave'],\n    listeners: {} as Record<string, (e: MouseEvent & KeyboardEvent) => void>,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Record<string, (e: MouseEvent & KeyboardEvent) => void> = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div', {\n      ...data,\n      class: classes,\n      on: {\n        click: (e: MouseEvent) => {\n          e.stopPropagation()\n\n          if (data.on && data.on.input && !props.disabled) {\n            wrapInArray(data.on.input).forEach(f => f(!props.value))\n          }\n        },\n      },\n    }, children)\n  },\n})\n","import VBtn from './VBtn'\n\nexport { VBtn }\nexport default VBtn\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType, VNodeChildren } from 'vue'\nimport { SelectItemKey } from 'types'\n\ntype ListTile = { item: any, disabled?: null | boolean, value?: boolean, index: number };\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: null as unknown as PropType<any>,\n    selectedItems: {\n      type: Array as PropType<any[]>,\n      default: () => [],\n    },\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: '', middle: text, end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile ({\n      item,\n      index,\n      disabled = null,\n      value = false,\n    }: ListTile): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          id: `list-item-${this._uid}-${index}`,\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item, index),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any, index = 0): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children: VNodeChildren = []\n    const itemsLength = this.items.length\n    for (let index = 0; index < itemsLength; index++) {\n      const item = this.items[index]\n\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile({ item, index }))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile({ item, index }))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement(VList, {\n      staticClass: 'v-select-list',\n      class: this.themeClasses,\n      attrs: {\n        role: 'listbox',\n        tabindex: -1,\n      },\n      props: { dense: this.dense },\n    }, children)\n  },\n})\n","import Vue, { PropType } from 'vue'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function as PropType<typeof deepEqual>,\n      default: deepEqual,\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VInput from '../VInput'\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport { getPropertyFromItem, getObjectValueByPath, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, VNodeDirective, PropType, VNodeData } from 'vue'\nimport { SelectItemKey } from 'types'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    'append-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      type: null as unknown as PropType<string | boolean | Element | VNode>,\n      default: false,\n    },\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    disableLookup: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'disabled',\n    },\n    itemText: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'text',\n    },\n    itemValue: {\n      type: [String, Array, Function] as PropType<SelectItemKey>,\n      default: 'value',\n    },\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      menuIsBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: this.blur,\n        args: {\n          closeConditional: this.closeConditional,\n        },\n      } as VNodeDirective] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    menuIsBooted () {\n      window.setTimeout(() => {\n        if (this.getContent() && this.getContent().addEventListener) {\n          this.getContent().addEventListener('scroll', this.onScroll, false)\n        }\n      })\n    },\n    isMenuActive (val) {\n      window.setTimeout(() => this.onMenuActiveChange(val))\n\n      if (!val) return\n\n      this.menuIsBooted = true\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        this.disabled ||\n        this.readonly ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.setMenuIndex(-1)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      if (!this.isMenuActive) return true\n\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        // Multiple selects don't close when an item is clicked\n        (!this.getContent() ||\n        !this.getContent().contains(e.target as Node)) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    getContent () {\n      return this.$refs.menu && this.$refs.menu.$refs.content\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.disabled ||\n        this.readonly ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.disabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n          this.genHiddenInput(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genIcon (\n      type: string,\n      cb?: (e: Event) => void,\n      extraData?: VNodeData\n    ) {\n      const icon = VInput.options.methods.genIcon.call(this, type, cb, extraData)\n\n      if (type === 'append') {\n        // Don't allow the dropdown icon to be focused\n        icon.children![0].data = mergeData(icon.children![0].data!, {\n          attrs: {\n            tabindex: icon.children![0].componentOptions!.listeners && '-1',\n            'aria-hidden': 'true',\n            'aria-label': undefined,\n          },\n        })\n      }\n\n      return icon\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n\n      input.data = mergeData(input.data!, {\n        domProps: { value: null },\n        attrs: {\n          readonly: true,\n          type: 'text',\n          'aria-readonly': String(this.readonly),\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        on: { keypress: this.onKeyPress },\n      })\n\n      return input\n    },\n    genHiddenInput (): VNode {\n      return this.$createElement('input', {\n        domProps: { value: this.lazyValue },\n        attrs: {\n          type: 'hidden',\n          name: this.attrs$.name,\n        },\n      })\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick (e: MouseEvent) {\n      if (this.isDisabled) return\n\n      if (!this.isAppendInner(e.target)) {\n        this.isMenuActive = true\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n\n      this.$emit('click', e)\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        this.readonly ||\n        this.disableLookup\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.lastItem = Math.max(this.lastItem, index + 5)\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.$nextTick(() => this.$refs.menu.getTiles())\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (this.readonly && e.keyCode !== keyCodes.tab) return\n\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      this.$emit('keydown', e)\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      if (\n        this.hasMouseDown &&\n        e.which !== 3 &&\n        !this.isDisabled\n      ) {\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isAppendInner(e.target)) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        // If user is clicking in the container\n        // and field is enclosed, activate it\n        } else if (this.isEnclosed) {\n          this.isMenuActive = true\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.getContent().scrollTop = 0))\n      } else {\n        if (this.lastItem >= this.computedItems.length) return\n\n        const showMoreItems = (\n          this.getContent().scrollHeight -\n          (this.getContent().scrollTop +\n          this.getContent().clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.isBooted = true\n\n      window.requestAnimationFrame(() => {\n        menu.getTiles()\n        keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n        menu.activeTile && menu.activeTile.click()\n      })\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n    isAppendInner (target: any) {\n      // return true if append inner is present\n      // and the target is itself or inside\n      const appendInner = this.$refs['append-inner']\n\n      return appendInner && (appendInner === target || appendInner.contains(target))\n    },\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","// Styles\nimport './VDivider.sass'\n\n// Types\nimport { VNode } from 'vue'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\nexport default Themeable.extend({\n  name: 'v-divider',\n\n  props: {\n    inset: Boolean,\n    vertical: Boolean,\n  },\n\n  render (h): VNode {\n    // WAI-ARIA attributes\n    let orientation\n    if (!this.$attrs.role || this.$attrs.role === 'separator') {\n      orientation = this.vertical ? 'vertical' : 'horizontal'\n    }\n    return h('hr', {\n      class: {\n        'v-divider': true,\n        'v-divider--inset': this.inset,\n        'v-divider--vertical': this.vertical,\n        ...this.themeClasses,\n      },\n      attrs: {\n        role: 'separator',\n        'aria-orientation': orientation,\n        ...this.$attrs,\n      },\n      on: this.$listeners,\n    })\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: () => { this.isActive = false },\n          args: {\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        } as any)\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n        this.isActive = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n"],"sourceRoot":""}